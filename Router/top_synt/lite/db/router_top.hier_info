|router_top
clock => clock.IN6
resetn => resetn.IN6
read_enb_0 => read_enb_temp[0].IN2
read_enb_1 => read_enb_temp[1].IN2
read_enb_2 => read_enb_temp[2].IN2
pkt_valid => pkt_valid.IN2
data_in[0] => data_in[0].IN3
data_in[1] => data_in[1].IN3
data_in[2] => data_in[2].IN1
data_in[3] => data_in[3].IN1
data_in[4] => data_in[4].IN1
data_in[5] => data_in[5].IN1
data_in[6] => data_in[6].IN1
data_in[7] => data_in[7].IN1
data_out_0[0] << router_fifo:fifo[0].f.data_out
data_out_0[1] << router_fifo:fifo[0].f.data_out
data_out_0[2] << router_fifo:fifo[0].f.data_out
data_out_0[3] << router_fifo:fifo[0].f.data_out
data_out_0[4] << router_fifo:fifo[0].f.data_out
data_out_0[5] << router_fifo:fifo[0].f.data_out
data_out_0[6] << router_fifo:fifo[0].f.data_out
data_out_0[7] << router_fifo:fifo[0].f.data_out
data_out_1[0] << router_fifo:fifo[1].f.data_out
data_out_1[1] << router_fifo:fifo[1].f.data_out
data_out_1[2] << router_fifo:fifo[1].f.data_out
data_out_1[3] << router_fifo:fifo[1].f.data_out
data_out_1[4] << router_fifo:fifo[1].f.data_out
data_out_1[5] << router_fifo:fifo[1].f.data_out
data_out_1[6] << router_fifo:fifo[1].f.data_out
data_out_1[7] << router_fifo:fifo[1].f.data_out
data_out_2[0] << router_fifo:fifo[2].f.data_out
data_out_2[1] << router_fifo:fifo[2].f.data_out
data_out_2[2] << router_fifo:fifo[2].f.data_out
data_out_2[3] << router_fifo:fifo[2].f.data_out
data_out_2[4] << router_fifo:fifo[2].f.data_out
data_out_2[5] << router_fifo:fifo[2].f.data_out
data_out_2[6] << router_fifo:fifo[2].f.data_out
data_out_2[7] << router_fifo:fifo[2].f.data_out
valid_out_0 << router_sync:dut3.vld_out_0
valid_out_1 << router_sync:dut3.vld_out_1
valid_out_2 << router_sync:dut3.vld_out_2
error << router_reg:dut2.err
busy << router_fsm:dut1.busy


|router_top|router_fsm:dut1
clock => state~1.DATAIN
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
pkt_valid => always1.IN1
pkt_valid => always1.IN1
pkt_valid => always1.IN0
parity_done => next_state.OUTPUTSELECT
parity_done => next_state.OUTPUTSELECT
parity_done => Selector0.IN4
soft_reset_0 => always0.IN1
soft_reset_1 => always0.IN1
soft_reset_2 => always0.IN1
fifo_full => next_state.OUTPUTSELECT
fifo_full => next_state.OUTPUTSELECT
fifo_full => Selector5.IN1
fifo_full => Selector0.IN2
fifo_full => always1.IN1
fifo_full => next_state.Load_After_Full.DATAB
low_pkt_valid => next_state.DATAA
low_pkt_valid => next_state.DATAA
fifo_empty_0 => always1.IN1
fifo_empty_0 => always1.IN1
fifo_empty_1 => always1.IN1
fifo_empty_1 => always1.IN1
fifo_empty_2 => always1.IN1
fifo_empty_2 => always1.IN1
data_in[0] => Equal0.IN31
data_in[0] => Equal1.IN0
data_in[0] => Equal2.IN31
data_in[1] => Equal0.IN30
data_in[1] => Equal1.IN31
data_in[1] => Equal2.IN0
busy <= busy.DB_MAX_OUTPUT_PORT_TYPE
detect_add <= detect_add.DB_MAX_OUTPUT_PORT_TYPE
ld_state <= ld_state.DB_MAX_OUTPUT_PORT_TYPE
laf_state <= laf_state.DB_MAX_OUTPUT_PORT_TYPE
full_state <= full_state.DB_MAX_OUTPUT_PORT_TYPE
write_enb_reg <= write_enb_reg.DB_MAX_OUTPUT_PORT_TYPE
rst_int_reg <= rst_int_reg.DB_MAX_OUTPUT_PORT_TYPE
lfd_state <= lfd_state.DB_MAX_OUTPUT_PORT_TYPE


|router_top|router_reg:dut2
clock => d[0].CLK
clock => d[1].CLK
clock => d[2].CLK
clock => d[3].CLK
clock => d[4].CLK
clock => d[5].CLK
clock => d[6].CLK
clock => d[7].CLK
clock => c[0].CLK
clock => c[1].CLK
clock => c[2].CLK
clock => c[3].CLK
clock => c[4].CLK
clock => c[5].CLK
clock => c[6].CLK
clock => c[7].CLK
clock => err~reg0.CLK
clock => low_pkt_valid~reg0.CLK
clock => parity_done~reg0.CLK
clock => dout[0]~reg0.CLK
clock => dout[1]~reg0.CLK
clock => dout[2]~reg0.CLK
clock => dout[3]~reg0.CLK
clock => dout[4]~reg0.CLK
clock => dout[5]~reg0.CLK
clock => dout[6]~reg0.CLK
clock => dout[7]~reg0.CLK
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => parity_done.OUTPUTSELECT
resetn => low_pkt_valid.OUTPUTSELECT
resetn => c[0].ENA
resetn => d[7].ENA
resetn => d[6].ENA
resetn => d[5].ENA
resetn => d[4].ENA
resetn => d[3].ENA
resetn => d[2].ENA
resetn => d[1].ENA
resetn => d[0].ENA
resetn => c[1].ENA
resetn => c[2].ENA
resetn => c[3].ENA
resetn => c[4].ENA
resetn => c[5].ENA
resetn => c[6].ENA
resetn => c[7].ENA
pkt_valid => dout.OUTPUTSELECT
pkt_valid => dout.OUTPUTSELECT
pkt_valid => dout.OUTPUTSELECT
pkt_valid => dout.OUTPUTSELECT
pkt_valid => dout.OUTPUTSELECT
pkt_valid => dout.OUTPUTSELECT
pkt_valid => dout.OUTPUTSELECT
pkt_valid => dout.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => parity_done.IN1
pkt_valid => low_pkt_valid.IN0
fifo_full => c.OUTPUTSELECT
fifo_full => c.OUTPUTSELECT
fifo_full => c.OUTPUTSELECT
fifo_full => c.OUTPUTSELECT
fifo_full => c.OUTPUTSELECT
fifo_full => c.OUTPUTSELECT
fifo_full => c.OUTPUTSELECT
fifo_full => c.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => parity_done.IN0
rst_int_reg => ~NO_FANOUT~
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => parity_done.IN1
ld_state => parity_done.IN1
ld_state => low_pkt_valid.IN1
ld_state => always0.IN0
laf_state => parity_done.IN1
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => dout.OUTPUTSELECT
full_state => dout.OUTPUTSELECT
full_state => dout.OUTPUTSELECT
full_state => dout.OUTPUTSELECT
full_state => dout.OUTPUTSELECT
full_state => dout.OUTPUTSELECT
full_state => dout.OUTPUTSELECT
full_state => dout.OUTPUTSELECT
lfd_state => always0.IN1
parity_done <= parity_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
low_pkt_valid <= low_pkt_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
err <= err~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_in[0] => c.IN1
data_in[0] => dout.DATAB
data_in[0] => dout.DATAB
data_in[0] => c.DATAB
data_in[0] => dout.DATAA
data_in[0] => d.DATAA
data_in[1] => c.IN1
data_in[1] => dout.DATAB
data_in[1] => dout.DATAB
data_in[1] => c.DATAB
data_in[1] => dout.DATAA
data_in[1] => d.DATAA
data_in[2] => c.IN1
data_in[2] => dout.DATAB
data_in[2] => dout.DATAB
data_in[2] => c.DATAB
data_in[2] => dout.DATAA
data_in[2] => d.DATAA
data_in[3] => c.IN1
data_in[3] => dout.DATAB
data_in[3] => dout.DATAB
data_in[3] => c.DATAB
data_in[3] => dout.DATAA
data_in[3] => d.DATAA
data_in[4] => c.IN1
data_in[4] => dout.DATAB
data_in[4] => dout.DATAB
data_in[4] => c.DATAB
data_in[4] => dout.DATAA
data_in[4] => d.DATAA
data_in[5] => c.IN1
data_in[5] => dout.DATAB
data_in[5] => dout.DATAB
data_in[5] => c.DATAB
data_in[5] => dout.DATAA
data_in[5] => d.DATAA
data_in[6] => c.IN1
data_in[6] => dout.DATAB
data_in[6] => dout.DATAB
data_in[6] => c.DATAB
data_in[6] => dout.DATAA
data_in[6] => d.DATAA
data_in[7] => c.IN1
data_in[7] => dout.DATAB
data_in[7] => dout.DATAB
data_in[7] => c.DATAB
data_in[7] => dout.DATAA
data_in[7] => d.DATAA
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|router_top|router_sync:dut3
detect_add => q[0].LATCH_ENABLE
detect_add => q[1].LATCH_ENABLE
write_enb_reg => write_enb.DATAB
write_enb_reg => write_enb.DATAB
write_enb_reg => write_enb.DATAB
clock => soft_reset_2~reg0.CLK
clock => soft_reset_1~reg0.CLK
clock => soft_reset_0~reg0.CLK
clock => count2[0].CLK
clock => count2[1].CLK
clock => count2[2].CLK
clock => count2[3].CLK
clock => count2[4].CLK
clock => count1[0].CLK
clock => count1[1].CLK
clock => count1[2].CLK
clock => count1[3].CLK
clock => count1[4].CLK
clock => count0[0].CLK
clock => count0[1].CLK
clock => count0[2].CLK
clock => count0[3].CLK
clock => count0[4].CLK
resetn => count0.OUTPUTSELECT
resetn => count0.OUTPUTSELECT
resetn => count0.OUTPUTSELECT
resetn => count0.OUTPUTSELECT
resetn => count0.OUTPUTSELECT
resetn => count1.OUTPUTSELECT
resetn => count1.OUTPUTSELECT
resetn => count1.OUTPUTSELECT
resetn => count1.OUTPUTSELECT
resetn => count1.OUTPUTSELECT
resetn => count2.OUTPUTSELECT
resetn => count2.OUTPUTSELECT
resetn => count2.OUTPUTSELECT
resetn => count2.OUTPUTSELECT
resetn => count2.OUTPUTSELECT
read_enb_0 => soft_reset_0.OUTPUTSELECT
read_enb_0 => count0.OUTPUTSELECT
read_enb_0 => count0.OUTPUTSELECT
read_enb_0 => count0.OUTPUTSELECT
read_enb_0 => count0.OUTPUTSELECT
read_enb_0 => count0.OUTPUTSELECT
read_enb_1 => soft_reset_1.OUTPUTSELECT
read_enb_1 => count1.OUTPUTSELECT
read_enb_1 => count1.OUTPUTSELECT
read_enb_1 => count1.OUTPUTSELECT
read_enb_1 => count1.OUTPUTSELECT
read_enb_1 => count1.OUTPUTSELECT
read_enb_2 => soft_reset_2.OUTPUTSELECT
read_enb_2 => count2.OUTPUTSELECT
read_enb_2 => count2.OUTPUTSELECT
read_enb_2 => count2.OUTPUTSELECT
read_enb_2 => count2.OUTPUTSELECT
read_enb_2 => count2.OUTPUTSELECT
empty_0 => count0.OUTPUTSELECT
empty_0 => count0.OUTPUTSELECT
empty_0 => count0.OUTPUTSELECT
empty_0 => count0.OUTPUTSELECT
empty_0 => count0.OUTPUTSELECT
empty_0 => vld_out_0.DATAIN
empty_0 => soft_reset_0~reg0.ENA
empty_1 => count1.OUTPUTSELECT
empty_1 => count1.OUTPUTSELECT
empty_1 => count1.OUTPUTSELECT
empty_1 => count1.OUTPUTSELECT
empty_1 => count1.OUTPUTSELECT
empty_1 => vld_out_1.DATAIN
empty_1 => soft_reset_1~reg0.ENA
empty_2 => count2.OUTPUTSELECT
empty_2 => count2.OUTPUTSELECT
empty_2 => count2.OUTPUTSELECT
empty_2 => count2.OUTPUTSELECT
empty_2 => count2.OUTPUTSELECT
empty_2 => vld_out_2.DATAIN
empty_2 => soft_reset_2~reg0.ENA
full_0 => Mux0.IN1
full_1 => Mux0.IN2
full_2 => Mux0.IN3
data_in[0] => q[0].DATAIN
data_in[1] => q[1].DATAIN
vld_out_0 <= empty_0.DB_MAX_OUTPUT_PORT_TYPE
vld_out_1 <= empty_1.DB_MAX_OUTPUT_PORT_TYPE
vld_out_2 <= empty_2.DB_MAX_OUTPUT_PORT_TYPE
soft_reset_0 <= soft_reset_0~reg0.DB_MAX_OUTPUT_PORT_TYPE
soft_reset_1 <= soft_reset_1~reg0.DB_MAX_OUTPUT_PORT_TYPE
soft_reset_2 <= soft_reset_2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fifo_full <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
write_enb[0] <= write_enb.DB_MAX_OUTPUT_PORT_TYPE
write_enb[1] <= write_enb.DB_MAX_OUTPUT_PORT_TYPE
write_enb[2] <= write_enb.DB_MAX_OUTPUT_PORT_TYPE


|router_top|router_fifo:fifo[0].f
clock => length[0].CLK
clock => length[1].CLK
clock => length[2].CLK
clock => length[3].CLK
clock => length[4].CLK
clock => length[5].CLK
clock => packet_out[0].CLK
clock => packet_out[0]~en.CLK
clock => packet_out[1].CLK
clock => packet_out[1]~en.CLK
clock => packet_out[2].CLK
clock => packet_out[2]~en.CLK
clock => packet_out[3].CLK
clock => packet_out[3]~en.CLK
clock => packet_out[4].CLK
clock => packet_out[4]~en.CLK
clock => packet_out[5].CLK
clock => packet_out[5]~en.CLK
clock => packet_out[6].CLK
clock => packet_out[6]~en.CLK
clock => packet_out[7].CLK
clock => packet_out[7]~en.CLK
clock => rd_pointer[0].CLK
clock => rd_pointer[1].CLK
clock => rd_pointer[2].CLK
clock => rd_pointer[3].CLK
clock => mem[15][0].CLK
clock => mem[15][1].CLK
clock => mem[15][2].CLK
clock => mem[15][3].CLK
clock => mem[15][4].CLK
clock => mem[15][5].CLK
clock => mem[15][6].CLK
clock => mem[15][7].CLK
clock => mem[15][8].CLK
clock => mem[14][0].CLK
clock => mem[14][1].CLK
clock => mem[14][2].CLK
clock => mem[14][3].CLK
clock => mem[14][4].CLK
clock => mem[14][5].CLK
clock => mem[14][6].CLK
clock => mem[14][7].CLK
clock => mem[14][8].CLK
clock => mem[13][0].CLK
clock => mem[13][1].CLK
clock => mem[13][2].CLK
clock => mem[13][3].CLK
clock => mem[13][4].CLK
clock => mem[13][5].CLK
clock => mem[13][6].CLK
clock => mem[13][7].CLK
clock => mem[13][8].CLK
clock => mem[12][0].CLK
clock => mem[12][1].CLK
clock => mem[12][2].CLK
clock => mem[12][3].CLK
clock => mem[12][4].CLK
clock => mem[12][5].CLK
clock => mem[12][6].CLK
clock => mem[12][7].CLK
clock => mem[12][8].CLK
clock => mem[11][0].CLK
clock => mem[11][1].CLK
clock => mem[11][2].CLK
clock => mem[11][3].CLK
clock => mem[11][4].CLK
clock => mem[11][5].CLK
clock => mem[11][6].CLK
clock => mem[11][7].CLK
clock => mem[11][8].CLK
clock => mem[10][0].CLK
clock => mem[10][1].CLK
clock => mem[10][2].CLK
clock => mem[10][3].CLK
clock => mem[10][4].CLK
clock => mem[10][5].CLK
clock => mem[10][6].CLK
clock => mem[10][7].CLK
clock => mem[10][8].CLK
clock => mem[9][0].CLK
clock => mem[9][1].CLK
clock => mem[9][2].CLK
clock => mem[9][3].CLK
clock => mem[9][4].CLK
clock => mem[9][5].CLK
clock => mem[9][6].CLK
clock => mem[9][7].CLK
clock => mem[9][8].CLK
clock => mem[8][0].CLK
clock => mem[8][1].CLK
clock => mem[8][2].CLK
clock => mem[8][3].CLK
clock => mem[8][4].CLK
clock => mem[8][5].CLK
clock => mem[8][6].CLK
clock => mem[8][7].CLK
clock => mem[8][8].CLK
clock => mem[7][0].CLK
clock => mem[7][1].CLK
clock => mem[7][2].CLK
clock => mem[7][3].CLK
clock => mem[7][4].CLK
clock => mem[7][5].CLK
clock => mem[7][6].CLK
clock => mem[7][7].CLK
clock => mem[7][8].CLK
clock => mem[6][0].CLK
clock => mem[6][1].CLK
clock => mem[6][2].CLK
clock => mem[6][3].CLK
clock => mem[6][4].CLK
clock => mem[6][5].CLK
clock => mem[6][6].CLK
clock => mem[6][7].CLK
clock => mem[6][8].CLK
clock => mem[5][0].CLK
clock => mem[5][1].CLK
clock => mem[5][2].CLK
clock => mem[5][3].CLK
clock => mem[5][4].CLK
clock => mem[5][5].CLK
clock => mem[5][6].CLK
clock => mem[5][7].CLK
clock => mem[5][8].CLK
clock => mem[4][0].CLK
clock => mem[4][1].CLK
clock => mem[4][2].CLK
clock => mem[4][3].CLK
clock => mem[4][4].CLK
clock => mem[4][5].CLK
clock => mem[4][6].CLK
clock => mem[4][7].CLK
clock => mem[4][8].CLK
clock => mem[3][0].CLK
clock => mem[3][1].CLK
clock => mem[3][2].CLK
clock => mem[3][3].CLK
clock => mem[3][4].CLK
clock => mem[3][5].CLK
clock => mem[3][6].CLK
clock => mem[3][7].CLK
clock => mem[3][8].CLK
clock => mem[2][0].CLK
clock => mem[2][1].CLK
clock => mem[2][2].CLK
clock => mem[2][3].CLK
clock => mem[2][4].CLK
clock => mem[2][5].CLK
clock => mem[2][6].CLK
clock => mem[2][7].CLK
clock => mem[2][8].CLK
clock => mem[1][0].CLK
clock => mem[1][1].CLK
clock => mem[1][2].CLK
clock => mem[1][3].CLK
clock => mem[1][4].CLK
clock => mem[1][5].CLK
clock => mem[1][6].CLK
clock => mem[1][7].CLK
clock => mem[1][8].CLK
clock => mem[0][0].CLK
clock => mem[0][1].CLK
clock => mem[0][2].CLK
clock => mem[0][3].CLK
clock => mem[0][4].CLK
clock => mem[0][5].CLK
clock => mem[0][6].CLK
clock => mem[0][7].CLK
clock => mem[0][8].CLK
clock => wr_pointer[0].CLK
clock => wr_pointer[1].CLK
clock => wr_pointer[2].CLK
clock => wr_pointer[3].CLK
clock => status_count[0].CLK
clock => status_count[1].CLK
clock => status_count[2].CLK
clock => status_count[3].CLK
clock => status_count[4].CLK
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => always3.IN0
write_enb => always0.IN1
write_enb => always0.IN1
read_enb => always0.IN1
read_enb => always0.IN1
soft_reset => always3.IN1
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
full <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
empty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out.DB_MAX_OUTPUT_PORT_TYPE


|router_top|router_fifo:fifo[1].f
clock => length[0].CLK
clock => length[1].CLK
clock => length[2].CLK
clock => length[3].CLK
clock => length[4].CLK
clock => length[5].CLK
clock => packet_out[0].CLK
clock => packet_out[0]~en.CLK
clock => packet_out[1].CLK
clock => packet_out[1]~en.CLK
clock => packet_out[2].CLK
clock => packet_out[2]~en.CLK
clock => packet_out[3].CLK
clock => packet_out[3]~en.CLK
clock => packet_out[4].CLK
clock => packet_out[4]~en.CLK
clock => packet_out[5].CLK
clock => packet_out[5]~en.CLK
clock => packet_out[6].CLK
clock => packet_out[6]~en.CLK
clock => packet_out[7].CLK
clock => packet_out[7]~en.CLK
clock => rd_pointer[0].CLK
clock => rd_pointer[1].CLK
clock => rd_pointer[2].CLK
clock => rd_pointer[3].CLK
clock => mem[15][0].CLK
clock => mem[15][1].CLK
clock => mem[15][2].CLK
clock => mem[15][3].CLK
clock => mem[15][4].CLK
clock => mem[15][5].CLK
clock => mem[15][6].CLK
clock => mem[15][7].CLK
clock => mem[15][8].CLK
clock => mem[14][0].CLK
clock => mem[14][1].CLK
clock => mem[14][2].CLK
clock => mem[14][3].CLK
clock => mem[14][4].CLK
clock => mem[14][5].CLK
clock => mem[14][6].CLK
clock => mem[14][7].CLK
clock => mem[14][8].CLK
clock => mem[13][0].CLK
clock => mem[13][1].CLK
clock => mem[13][2].CLK
clock => mem[13][3].CLK
clock => mem[13][4].CLK
clock => mem[13][5].CLK
clock => mem[13][6].CLK
clock => mem[13][7].CLK
clock => mem[13][8].CLK
clock => mem[12][0].CLK
clock => mem[12][1].CLK
clock => mem[12][2].CLK
clock => mem[12][3].CLK
clock => mem[12][4].CLK
clock => mem[12][5].CLK
clock => mem[12][6].CLK
clock => mem[12][7].CLK
clock => mem[12][8].CLK
clock => mem[11][0].CLK
clock => mem[11][1].CLK
clock => mem[11][2].CLK
clock => mem[11][3].CLK
clock => mem[11][4].CLK
clock => mem[11][5].CLK
clock => mem[11][6].CLK
clock => mem[11][7].CLK
clock => mem[11][8].CLK
clock => mem[10][0].CLK
clock => mem[10][1].CLK
clock => mem[10][2].CLK
clock => mem[10][3].CLK
clock => mem[10][4].CLK
clock => mem[10][5].CLK
clock => mem[10][6].CLK
clock => mem[10][7].CLK
clock => mem[10][8].CLK
clock => mem[9][0].CLK
clock => mem[9][1].CLK
clock => mem[9][2].CLK
clock => mem[9][3].CLK
clock => mem[9][4].CLK
clock => mem[9][5].CLK
clock => mem[9][6].CLK
clock => mem[9][7].CLK
clock => mem[9][8].CLK
clock => mem[8][0].CLK
clock => mem[8][1].CLK
clock => mem[8][2].CLK
clock => mem[8][3].CLK
clock => mem[8][4].CLK
clock => mem[8][5].CLK
clock => mem[8][6].CLK
clock => mem[8][7].CLK
clock => mem[8][8].CLK
clock => mem[7][0].CLK
clock => mem[7][1].CLK
clock => mem[7][2].CLK
clock => mem[7][3].CLK
clock => mem[7][4].CLK
clock => mem[7][5].CLK
clock => mem[7][6].CLK
clock => mem[7][7].CLK
clock => mem[7][8].CLK
clock => mem[6][0].CLK
clock => mem[6][1].CLK
clock => mem[6][2].CLK
clock => mem[6][3].CLK
clock => mem[6][4].CLK
clock => mem[6][5].CLK
clock => mem[6][6].CLK
clock => mem[6][7].CLK
clock => mem[6][8].CLK
clock => mem[5][0].CLK
clock => mem[5][1].CLK
clock => mem[5][2].CLK
clock => mem[5][3].CLK
clock => mem[5][4].CLK
clock => mem[5][5].CLK
clock => mem[5][6].CLK
clock => mem[5][7].CLK
clock => mem[5][8].CLK
clock => mem[4][0].CLK
clock => mem[4][1].CLK
clock => mem[4][2].CLK
clock => mem[4][3].CLK
clock => mem[4][4].CLK
clock => mem[4][5].CLK
clock => mem[4][6].CLK
clock => mem[4][7].CLK
clock => mem[4][8].CLK
clock => mem[3][0].CLK
clock => mem[3][1].CLK
clock => mem[3][2].CLK
clock => mem[3][3].CLK
clock => mem[3][4].CLK
clock => mem[3][5].CLK
clock => mem[3][6].CLK
clock => mem[3][7].CLK
clock => mem[3][8].CLK
clock => mem[2][0].CLK
clock => mem[2][1].CLK
clock => mem[2][2].CLK
clock => mem[2][3].CLK
clock => mem[2][4].CLK
clock => mem[2][5].CLK
clock => mem[2][6].CLK
clock => mem[2][7].CLK
clock => mem[2][8].CLK
clock => mem[1][0].CLK
clock => mem[1][1].CLK
clock => mem[1][2].CLK
clock => mem[1][3].CLK
clock => mem[1][4].CLK
clock => mem[1][5].CLK
clock => mem[1][6].CLK
clock => mem[1][7].CLK
clock => mem[1][8].CLK
clock => mem[0][0].CLK
clock => mem[0][1].CLK
clock => mem[0][2].CLK
clock => mem[0][3].CLK
clock => mem[0][4].CLK
clock => mem[0][5].CLK
clock => mem[0][6].CLK
clock => mem[0][7].CLK
clock => mem[0][8].CLK
clock => wr_pointer[0].CLK
clock => wr_pointer[1].CLK
clock => wr_pointer[2].CLK
clock => wr_pointer[3].CLK
clock => status_count[0].CLK
clock => status_count[1].CLK
clock => status_count[2].CLK
clock => status_count[3].CLK
clock => status_count[4].CLK
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => always3.IN0
write_enb => always0.IN1
write_enb => always0.IN1
read_enb => always0.IN1
read_enb => always0.IN1
soft_reset => always3.IN1
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
full <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
empty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out.DB_MAX_OUTPUT_PORT_TYPE


|router_top|router_fifo:fifo[2].f
clock => length[0].CLK
clock => length[1].CLK
clock => length[2].CLK
clock => length[3].CLK
clock => length[4].CLK
clock => length[5].CLK
clock => packet_out[0].CLK
clock => packet_out[0]~en.CLK
clock => packet_out[1].CLK
clock => packet_out[1]~en.CLK
clock => packet_out[2].CLK
clock => packet_out[2]~en.CLK
clock => packet_out[3].CLK
clock => packet_out[3]~en.CLK
clock => packet_out[4].CLK
clock => packet_out[4]~en.CLK
clock => packet_out[5].CLK
clock => packet_out[5]~en.CLK
clock => packet_out[6].CLK
clock => packet_out[6]~en.CLK
clock => packet_out[7].CLK
clock => packet_out[7]~en.CLK
clock => rd_pointer[0].CLK
clock => rd_pointer[1].CLK
clock => rd_pointer[2].CLK
clock => rd_pointer[3].CLK
clock => mem[15][0].CLK
clock => mem[15][1].CLK
clock => mem[15][2].CLK
clock => mem[15][3].CLK
clock => mem[15][4].CLK
clock => mem[15][5].CLK
clock => mem[15][6].CLK
clock => mem[15][7].CLK
clock => mem[15][8].CLK
clock => mem[14][0].CLK
clock => mem[14][1].CLK
clock => mem[14][2].CLK
clock => mem[14][3].CLK
clock => mem[14][4].CLK
clock => mem[14][5].CLK
clock => mem[14][6].CLK
clock => mem[14][7].CLK
clock => mem[14][8].CLK
clock => mem[13][0].CLK
clock => mem[13][1].CLK
clock => mem[13][2].CLK
clock => mem[13][3].CLK
clock => mem[13][4].CLK
clock => mem[13][5].CLK
clock => mem[13][6].CLK
clock => mem[13][7].CLK
clock => mem[13][8].CLK
clock => mem[12][0].CLK
clock => mem[12][1].CLK
clock => mem[12][2].CLK
clock => mem[12][3].CLK
clock => mem[12][4].CLK
clock => mem[12][5].CLK
clock => mem[12][6].CLK
clock => mem[12][7].CLK
clock => mem[12][8].CLK
clock => mem[11][0].CLK
clock => mem[11][1].CLK
clock => mem[11][2].CLK
clock => mem[11][3].CLK
clock => mem[11][4].CLK
clock => mem[11][5].CLK
clock => mem[11][6].CLK
clock => mem[11][7].CLK
clock => mem[11][8].CLK
clock => mem[10][0].CLK
clock => mem[10][1].CLK
clock => mem[10][2].CLK
clock => mem[10][3].CLK
clock => mem[10][4].CLK
clock => mem[10][5].CLK
clock => mem[10][6].CLK
clock => mem[10][7].CLK
clock => mem[10][8].CLK
clock => mem[9][0].CLK
clock => mem[9][1].CLK
clock => mem[9][2].CLK
clock => mem[9][3].CLK
clock => mem[9][4].CLK
clock => mem[9][5].CLK
clock => mem[9][6].CLK
clock => mem[9][7].CLK
clock => mem[9][8].CLK
clock => mem[8][0].CLK
clock => mem[8][1].CLK
clock => mem[8][2].CLK
clock => mem[8][3].CLK
clock => mem[8][4].CLK
clock => mem[8][5].CLK
clock => mem[8][6].CLK
clock => mem[8][7].CLK
clock => mem[8][8].CLK
clock => mem[7][0].CLK
clock => mem[7][1].CLK
clock => mem[7][2].CLK
clock => mem[7][3].CLK
clock => mem[7][4].CLK
clock => mem[7][5].CLK
clock => mem[7][6].CLK
clock => mem[7][7].CLK
clock => mem[7][8].CLK
clock => mem[6][0].CLK
clock => mem[6][1].CLK
clock => mem[6][2].CLK
clock => mem[6][3].CLK
clock => mem[6][4].CLK
clock => mem[6][5].CLK
clock => mem[6][6].CLK
clock => mem[6][7].CLK
clock => mem[6][8].CLK
clock => mem[5][0].CLK
clock => mem[5][1].CLK
clock => mem[5][2].CLK
clock => mem[5][3].CLK
clock => mem[5][4].CLK
clock => mem[5][5].CLK
clock => mem[5][6].CLK
clock => mem[5][7].CLK
clock => mem[5][8].CLK
clock => mem[4][0].CLK
clock => mem[4][1].CLK
clock => mem[4][2].CLK
clock => mem[4][3].CLK
clock => mem[4][4].CLK
clock => mem[4][5].CLK
clock => mem[4][6].CLK
clock => mem[4][7].CLK
clock => mem[4][8].CLK
clock => mem[3][0].CLK
clock => mem[3][1].CLK
clock => mem[3][2].CLK
clock => mem[3][3].CLK
clock => mem[3][4].CLK
clock => mem[3][5].CLK
clock => mem[3][6].CLK
clock => mem[3][7].CLK
clock => mem[3][8].CLK
clock => mem[2][0].CLK
clock => mem[2][1].CLK
clock => mem[2][2].CLK
clock => mem[2][3].CLK
clock => mem[2][4].CLK
clock => mem[2][5].CLK
clock => mem[2][6].CLK
clock => mem[2][7].CLK
clock => mem[2][8].CLK
clock => mem[1][0].CLK
clock => mem[1][1].CLK
clock => mem[1][2].CLK
clock => mem[1][3].CLK
clock => mem[1][4].CLK
clock => mem[1][5].CLK
clock => mem[1][6].CLK
clock => mem[1][7].CLK
clock => mem[1][8].CLK
clock => mem[0][0].CLK
clock => mem[0][1].CLK
clock => mem[0][2].CLK
clock => mem[0][3].CLK
clock => mem[0][4].CLK
clock => mem[0][5].CLK
clock => mem[0][6].CLK
clock => mem[0][7].CLK
clock => mem[0][8].CLK
clock => wr_pointer[0].CLK
clock => wr_pointer[1].CLK
clock => wr_pointer[2].CLK
clock => wr_pointer[3].CLK
clock => status_count[0].CLK
clock => status_count[1].CLK
clock => status_count[2].CLK
clock => status_count[3].CLK
clock => status_count[4].CLK
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => data_out.OUTPUTSELECT
resetn => always3.IN0
write_enb => always0.IN1
write_enb => always0.IN1
read_enb => always0.IN1
read_enb => always0.IN1
soft_reset => always3.IN1
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
lfd_state => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[0] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[1] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[2] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[3] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[4] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[5] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[6] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
data_in[7] => mem.DATAB
full <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
empty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out.DB_MAX_OUTPUT_PORT_TYPE


