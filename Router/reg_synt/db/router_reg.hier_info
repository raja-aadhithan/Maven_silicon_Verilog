|router_reg
clock => d[0].CLK
clock => d[1].CLK
clock => d[2].CLK
clock => d[3].CLK
clock => d[4].CLK
clock => d[5].CLK
clock => d[6].CLK
clock => d[7].CLK
clock => b[0].CLK
clock => b[1].CLK
clock => b[2].CLK
clock => b[3].CLK
clock => b[4].CLK
clock => b[5].CLK
clock => b[6].CLK
clock => b[7].CLK
clock => a[0].CLK
clock => a[1].CLK
clock => a[2].CLK
clock => a[3].CLK
clock => a[4].CLK
clock => a[5].CLK
clock => a[6].CLK
clock => a[7].CLK
clock => c[0].CLK
clock => c[1].CLK
clock => c[2].CLK
clock => c[3].CLK
clock => c[4].CLK
clock => c[5].CLK
clock => c[6].CLK
clock => c[7].CLK
clock => err~reg0.CLK
clock => low_pkt_valid~reg0.CLK
clock => parity_done~reg0.CLK
clock => dout[0]~reg0.CLK
clock => dout[1]~reg0.CLK
clock => dout[2]~reg0.CLK
clock => dout[3]~reg0.CLK
clock => dout[4]~reg0.CLK
clock => dout[5]~reg0.CLK
clock => dout[6]~reg0.CLK
clock => dout[7]~reg0.CLK
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => parity_done.OUTPUTSELECT
resetn => low_pkt_valid.OUTPUTSELECT
resetn => d[1].ENA
resetn => d[0].ENA
resetn => d[2].ENA
resetn => d[3].ENA
resetn => d[4].ENA
resetn => d[5].ENA
resetn => d[6].ENA
resetn => d[7].ENA
resetn => b[0].ENA
resetn => b[1].ENA
resetn => b[2].ENA
resetn => b[3].ENA
resetn => b[4].ENA
resetn => b[5].ENA
resetn => b[6].ENA
resetn => b[7].ENA
resetn => a[0].ENA
resetn => a[1].ENA
resetn => a[2].ENA
resetn => a[3].ENA
resetn => a[4].ENA
resetn => a[5].ENA
resetn => a[6].ENA
resetn => a[7].ENA
resetn => c[0].ENA
resetn => c[1].ENA
resetn => c[2].ENA
resetn => c[3].ENA
resetn => c[4].ENA
resetn => c[5].ENA
resetn => c[6].ENA
resetn => c[7].ENA
pkt_valid => a.OUTPUTSELECT
pkt_valid => a.OUTPUTSELECT
pkt_valid => a.OUTPUTSELECT
pkt_valid => a.OUTPUTSELECT
pkt_valid => a.OUTPUTSELECT
pkt_valid => a.OUTPUTSELECT
pkt_valid => a.OUTPUTSELECT
pkt_valid => a.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => c.OUTPUTSELECT
pkt_valid => b.OUTPUTSELECT
pkt_valid => b.OUTPUTSELECT
pkt_valid => b.OUTPUTSELECT
pkt_valid => b.OUTPUTSELECT
pkt_valid => b.OUTPUTSELECT
pkt_valid => b.OUTPUTSELECT
pkt_valid => b.OUTPUTSELECT
pkt_valid => b.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => d.OUTPUTSELECT
pkt_valid => parity_done.IN1
pkt_valid => low_pkt_valid.IN0
fifo_full => b.OUTPUTSELECT
fifo_full => b.OUTPUTSELECT
fifo_full => b.OUTPUTSELECT
fifo_full => b.OUTPUTSELECT
fifo_full => b.OUTPUTSELECT
fifo_full => b.OUTPUTSELECT
fifo_full => b.OUTPUTSELECT
fifo_full => b.OUTPUTSELECT
fifo_full => parity_done.IN0
rst_int_reg => c.OUTPUTSELECT
rst_int_reg => c.OUTPUTSELECT
rst_int_reg => c.OUTPUTSELECT
rst_int_reg => c.OUTPUTSELECT
rst_int_reg => c.OUTPUTSELECT
rst_int_reg => c.OUTPUTSELECT
rst_int_reg => c.OUTPUTSELECT
rst_int_reg => c.OUTPUTSELECT
rst_int_reg => parity_done.OUTPUTSELECT
rst_int_reg => low_pkt_valid.OUTPUTSELECT
rst_int_reg => a.OUTPUTSELECT
rst_int_reg => a.OUTPUTSELECT
rst_int_reg => a.OUTPUTSELECT
rst_int_reg => a.OUTPUTSELECT
rst_int_reg => a.OUTPUTSELECT
rst_int_reg => a.OUTPUTSELECT
rst_int_reg => a.OUTPUTSELECT
rst_int_reg => a.OUTPUTSELECT
rst_int_reg => b.OUTPUTSELECT
rst_int_reg => b.OUTPUTSELECT
rst_int_reg => b.OUTPUTSELECT
rst_int_reg => b.OUTPUTSELECT
rst_int_reg => b.OUTPUTSELECT
rst_int_reg => b.OUTPUTSELECT
rst_int_reg => b.OUTPUTSELECT
rst_int_reg => b.OUTPUTSELECT
rst_int_reg => d.OUTPUTSELECT
rst_int_reg => d.OUTPUTSELECT
rst_int_reg => d.OUTPUTSELECT
rst_int_reg => d.OUTPUTSELECT
rst_int_reg => d.OUTPUTSELECT
rst_int_reg => d.OUTPUTSELECT
rst_int_reg => d.OUTPUTSELECT
rst_int_reg => d.OUTPUTSELECT
detect_add => a.OUTPUTSELECT
detect_add => a.OUTPUTSELECT
detect_add => a.OUTPUTSELECT
detect_add => a.OUTPUTSELECT
detect_add => a.OUTPUTSELECT
detect_add => a.OUTPUTSELECT
detect_add => a.OUTPUTSELECT
detect_add => a.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => c.OUTPUTSELECT
detect_add => parity_done.IN1
ld_state => parity_done.IN1
ld_state => low_pkt_valid.IN1
ld_state => b.OUTPUTSELECT
ld_state => b.OUTPUTSELECT
ld_state => b.OUTPUTSELECT
ld_state => b.OUTPUTSELECT
ld_state => b.OUTPUTSELECT
ld_state => b.OUTPUTSELECT
ld_state => b.OUTPUTSELECT
ld_state => b.OUTPUTSELECT
ld_state => c.OUTPUTSELECT
ld_state => c.OUTPUTSELECT
ld_state => c.OUTPUTSELECT
ld_state => c.OUTPUTSELECT
ld_state => c.OUTPUTSELECT
ld_state => c.OUTPUTSELECT
ld_state => c.OUTPUTSELECT
ld_state => c.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
laf_state => parity_done.IN1
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
full_state => c.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
parity_done <= parity_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
low_pkt_valid <= low_pkt_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
err <= err~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_in[0] => a.DATAB
data_in[0] => c.DATAB
data_in[0] => b.DATAB
data_in[0] => c.IN1
data_in[0] => d.DATAA
data_in[0] => dout.DATAB
data_in[1] => a.DATAB
data_in[1] => c.DATAB
data_in[1] => b.DATAB
data_in[1] => c.IN1
data_in[1] => d.DATAA
data_in[1] => dout.DATAB
data_in[2] => a.DATAB
data_in[2] => c.DATAB
data_in[2] => b.DATAB
data_in[2] => c.IN1
data_in[2] => d.DATAA
data_in[2] => dout.DATAB
data_in[3] => a.DATAB
data_in[3] => c.DATAB
data_in[3] => b.DATAB
data_in[3] => c.IN1
data_in[3] => d.DATAA
data_in[3] => dout.DATAB
data_in[4] => a.DATAB
data_in[4] => c.DATAB
data_in[4] => b.DATAB
data_in[4] => c.IN1
data_in[4] => d.DATAA
data_in[4] => dout.DATAB
data_in[5] => a.DATAB
data_in[5] => c.DATAB
data_in[5] => b.DATAB
data_in[5] => c.IN1
data_in[5] => d.DATAA
data_in[5] => dout.DATAB
data_in[6] => a.DATAB
data_in[6] => c.DATAB
data_in[6] => b.DATAB
data_in[6] => c.IN1
data_in[6] => d.DATAA
data_in[6] => dout.DATAB
data_in[7] => a.DATAB
data_in[7] => c.DATAB
data_in[7] => b.DATAB
data_in[7] => c.IN1
data_in[7] => d.DATAA
data_in[7] => dout.DATAB
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


